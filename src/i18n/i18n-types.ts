// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'fa'
	| 'en'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	Test: RequiredParams1<'name'>
	INTERNALSERVERERROR: any,
	HI: RequiredParams1<'name'>,
	EmailConfigurationTitle: any;
	EmailConfigurationDescription: any;
	ClickHere: any;
	EmailConfigurationSubject: any;
	MessageSendActivationEmail: RequiredParams1<'email'>;
	ExistEmail: any;
	PasswordAndConfirmNotMatched: any;
	CanNotFindUser: any;
	SendActivationLink: RequiredParams1<'email'>;
	SuccessEmailConfirmCode: any;
	ExpireActivationCode: any;
	BlockedAccount: RequiredParams1<'date'>;
	EmailNotConfirmed: any;
	UserGoogleAuthnticatorForLogin: any;
	UsernameOrPAsswordNotValid: any;
	SentTowfactorCode: any;
	TwofactorCodeTitle:any;
	ForgetPasswordTitle:any;
}

export type TranslationFunctions = {
	Test: (arg: { name: unknown }) => LocalizedString
	INTERNALSERVERERROR: () => LocalizedString
	HI: (arg: { name: unknown }) => LocalizedString
	EmailConfigurationTitle: () => LocalizedString
	EmailConfigurationDescription: () => LocalizedString
	ClickHere: () => LocalizedString
	EmailConfigurationSubject: () => LocalizedString
	MessageSendActivationEmail: (arg: { email: unknown }) => LocalizedString
	ExistEmail: () => LocalizedString
	PasswordAndConfirmNotMatched: () => LocalizedString
	CanNotFindUser: () => LocalizedString
	SendActivationLink: (arg: { email: unknown }) => LocalizedString
	SuccessEmailConfirmCode: () => LocalizedString
	ExpireActivationCode: () => LocalizedString
	BlockedAccount: (arg: { date: unknown }) => LocalizedString
	EmailNotConfirmed: () => LocalizedString
	UserGoogleAuthnticatorForLogin: () => LocalizedString
	UsernameOrPAsswordNotValid: () => LocalizedString
	SentTowfactorCode: () => LocalizedString
	TwofactorCodeTitle : () => LocalizedString
	ForgetPasswordTitle : () => LocalizedString
}

export type Formatters = {}

type Param<P extends string> = `{${P}}`

type Params1<P1 extends string> =
	`${string}${Param<P1>}${string}`

type RequiredParams1<P1 extends string> =
	| Params1<P1>
